{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","this","Component","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","type","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"6QAEMA,EAAc,WAChB,OACI,+BACI,4BACI,oCACA,sCAKVC,EAAY,SAAAC,GAqBd,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACI,4BAAQC,QAAS,kBACbT,EAAMU,gBAAgBL,KAD1B,eAShB,OAAO,+BAAQJ,IAgBJU,E,iLAZD,IAAD,EACsCC,KAAKZ,MAAxCE,EADH,EACGA,cAAeQ,EADlB,EACkBA,gBAEvB,OACI,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,S,GAPtDG,a,OCTLC,E,YAvCX,WAAYd,GAAO,IAAD,8BACd,4CAAMA,KAUVe,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBV,EADY,EACZA,KAAMW,EADM,EACNA,MAEd,EAAKC,SAAL,eACKZ,EAAOW,KAfE,EAmBlBE,WAAa,WACT,EAAKpB,MAAMqB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAlBnB,EAAKA,aAAe,CAChBhB,KAAM,GACNC,IAAK,IAGT,EAAKc,MAAQ,EAAKC,aARJ,E,sEAwBT,IAAD,EACkBX,KAAKU,MAAnBf,EADJ,EACIA,KAAMC,EADV,EACUA,IAEd,OACI,8BACI,uCACA,2BAAOgB,KAAK,OAAOjB,KAAK,OAAOW,MAAOX,EAAMkB,SAAUb,KAAKG,eAC3D,sCACA,2BAAOS,KAAK,OAAOjB,KAAK,MAAMW,MAAOV,EAAKiB,SAAUb,KAAKG,eACzD,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASG,KAAKQ,kB,GAlC/CP,aCgEJa,E,2MAzDbJ,MAAQ,CACNK,WAAY,I,EAqBdjB,gBAAkB,SAAAL,GAAU,IAClBsB,EAAe,EAAKL,MAApBK,WAER,EAAKR,SAAS,CACZQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAMzB,Q,EAKnBgB,aAAe,SAAAQ,GACb,EAAKV,SAAS,CACZQ,WAAW,GAAD,mBAAM,EAAKL,MAAMK,YAAjB,CAA6BE,O,wEAIjC,IAEAF,EAAef,KAAKU,MAApBK,WAER,OACE,yBAAKI,UAAU,aACb,6CACA,kBAAC,EAAD,CAAO7B,cAAeyB,EACpBjB,gBAAiBE,KAAKF,kBACxB,kBAAC,EAAD,CAAMW,aAAgBT,KAAKS,oB,GAjDjBR,aCgBlBmB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a8c3a6c5.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n            </tr>\n        </thead>\n    )\n}\nconst TableBody = props => {\n    // return (\n    //     <tbody>\n    //         <tr>\n    //             <td>Charlie</td>\n    //             <td>Janitor</td>\n    //         </tr>\n    //         <tr>\n    //             <td>Mac</td>\n    //             <td>Bouncer</td>\n    //         </tr>\n    //         <tr>\n    //             <td>Dee</td>\n    //             <td>Aspiring actress</td>\n    //         </tr>\n    //         <tr>\n    //             <td>Dennis</td>\n    //             <td>Bartender</td>\n    //         </tr>\n    //     </tbody>\n    // )\n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={() =>\n                        props.removeCharacter(index)}>\n                        Delete\n                        </button>\n                </td>\n            </tr>\n        )\n    })\n\n    return <tbody>{rows}</tbody>\n}\n\nclass Table extends Component {\n    render() {\n        const { characterData, removeCharacter } = this.props\n\n        return (\n            <table>\n                <TableHeader />\n                <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n            </table>\n        )\n    }\n}\n\nexport default Table\n\n/**\n * when <code>return</code> is contained to one line,\n * it does not need parenthneses().\n */\n// const Table = () => {\n//     return \n//         <table>\n//             <TableHeader />\n//             <TableBody />\n//         </table>\n\n// }\n\n// class Table extends Component {\n//     render() {\n//         return (\n//             <table>\n//                 <TableHeader />\n//                 <TableBody />\n//             </table>\n//         )\n//     }\n// }\n\n// class Table extends Component {\n//     render() {\n//         return (\n//             <table>\n//                 <thead>\n//                     <tr>\n//                         <th>Name</th>\n//                         <th>Job</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     <tr>\n//                         <td>Charlie</td>\n//                         <td>Janitor</td>\n//                     </tr>\n//                     <tr>\n//                         <td>Mac</td>\n//                         <td>Bouncer</td>\n//                     </tr>\n//                     <tr>\n//                         <td>Dee</td>\n//                         <td>Aspiring actress</td>\n//                     </tr>\n//                     <tr>\n//                         <td>Dennis</td>\n//                         <td>Bartender</td>\n//                     </tr>\n//                 </tbody>\n//             </table>\n//         )\n//     }\n// }\n\n\n","import React, { Component } from 'react'\n\nclass Form extends Component {\n    constructor(props){\n        super(props)\n\n        this.initialState = {\n            name: '',\n            job: '',\n        }\n\n        this.state = this.initialState\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n    render(){\n        const { name, job } = this.state;\n\n        return (\n            <form>\n                <label>Name</label>\n                <input type=\"text\" name=\"name\" value={name} onChange={this.handleChange} />\n                <label>Job</label>\n                <input type=\"text\" name=\"job\" value={job} onChange={this.handleChange} />\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n            </form>\n        );\n    }\n}\n\nexport default Form;","import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport Table from './Table'\nimport Form from './Form'\n\n\nclass App extends Component {\n\n  state = {\n    characters: [\n      // {\n      //   name: 'Charlie',\n      //   job: 'Janitor',\n      // },\n      // {\n      //   name: 'Mac',\n      //   job: 'Bouncer',\n      // },\n      // {\n      //   name: 'Dee',\n      //   job: 'Aspring actress',\n      // },\n      // {\n      //   name: 'Dennis',\n      //   job: 'Bartender',\n      // },\n    ],\n  }\n\n\n  removeCharacter = index => {\n    const { characters } = this.state\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      }),\n    })\n  }\n\n  handleSubmit = character => {\n    this.setState({\n      characters: [...this.state.characters, character]\n    })\n  }\n\n  render() {\n\n    const { characters } = this.state\n\n    return (\n      <div className=\"container\">\n        <h1>Hello, React!</h1>\n        <Table characterData={characters}\n          removeCharacter={this.removeCharacter} />\n        <Form handleSubmit = {this.handleSubmit} />\n      </div>\n      // <div className=\"container\">\n\n      // </div>\n    )\n  }\n}\n\n\nexport default App;\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n// class App extends Component {\n//     render() {\n//         return (\n//             <div className=\"APP\">\n//                 <h1>Hello, React!</h1>\n//             </div>\n//         )\n//     }\n// }\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}